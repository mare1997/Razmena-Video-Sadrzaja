var id = 0;
var post = null;
$(document).ready(function() {
	id = window.location.search.slice(1).split('&')[0].split('=')[1];
	console.log("postId: "+id);
	loadPage(id);
	loadComments();
	loadTags(id);
	
});
//editovanje comentara ostali podaci

function loadPage(id){
	var url = "http://localhost:8080/osa/posts/"+id;
	$.ajax({
        url: url,
        dataType: 'json',
		cache: false,
        success: function (response) {
        	var cpost=response;
        	post = cpost;
        	console.log(userRole);
        	
        	if(userRole != "ADMIN" ){
        		if(userId != cpost.user.id){
    			$("#deletePostNav").hide();
				$("#editPostNav").hide();
        		}
    			
        	}
        	
        	$('#postTitle').text(cpost.title);
        	$('#postDesc').text(cpost.description);
        	$('#postAuthor').text("Author: "+cpost.user.name);
        	$('#postDate').text("Date posted: "+format(cpost.date));
        	$('#like').text(cpost.likes);
        	$('#dislike').text(cpost.dislikes);
        	$('#location').text("Longitude: " +cpost.longitude + ", Latitide: "+cpost.latitude);
        	
			var postPhoto = 'http://www.personalbrandingblog.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640-300x300.png';
			if(cpost.photo!=null){
				postPhoto = 'data:image/gif;base64,'+cpost.photo;
			}
            $('#postPicture').attr('src',''+postPhoto);
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert("Post doesnt exist.");
			window.location.href = "posts.html";
		}
    });
}
function loadComments(){
	var url = "http://localhost:8080/osa/comments/post/" + id;
	
	$.ajax({
        url: url,
        dataType: 'json',
		cache: false,
        success: function (response) {
        	var commDiv = $('#commentsRow');
			for(var i=0; i<response.length; i++) {
				comment = response[i];
				var date = format(comment.date);
				var commUserPhoto = 'http://www.personalbrandingblog.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640-300x300.png';
				if(comment.user.photo!=null){
					commUserPhoto = 'data:image/gif;base64,'+comment.user.photo;
				}
				commDiv.append(
							'<div class="comment" id="comm'+comment.id+'">'+
							'<img height="45" width="45" alt="commPic" id="commPic" src="'+commUserPhoto+'">'+
							'<label for="commPic" id="usernameLabel">'+comment.user.username+'</label>'+
							'<p id="commDate">'+'Date posted: '+date+'</p>'+
							'<h4 id="commTitle'+comment.id+'">'+comment.title+'</h4>'+
							'<p id="commDesc'+comment.id+'">'+comment.description+'</p>'+
							'<div id="options'+comment.id+'">'+
							'<button id="commlike'+comment.id+'" class="btn btn-primary" onclick="likeComment('+comment.id+')"><span class="glyphicon glyphicon-thumbs-up"></span></button>'+
							'<label for="commlike" id="likeComm'+comment.id+'">'+comment.likes+'</label>'+
							'<button id="commdislike'+comment.id+'" class="btn btn-primary"  onclick="dislikeComment('+comment.id+')"> <span class="glyphicon glyphicon-thumbs-down"></span></button>'+
							'<label for="commdislike" id="dislikeComm'+comment.id+'">'+comment.dislikes+'</label>'+
							'</div>'+
							'<hr id="shortline">'+
							'<br>'+
						'</div>');
				if(post.user.userType == 'ADMIN' || post.user.id == id){
					$('#options'+comment.id).append(
							'<button type="button" class="dropdown-toggle btn btn-default" data-toggle="dropdown" id="optionsForAdminOrOwners"><span class="glyphicon glyphicon-menu-hamburger"></span></button>'+
							'<ul class="dropdown-menu" id="optionsForOwnerAndAdmin">'+
			                '<li id="deleteComm"><a href="#deleteModal" data-toggle="modal" onclick="takeCommId('+ comment.id+')">Delete Comment</a></li>'+
			                '<li id="editComm"><a href="#editComment" data-toggle="modal" onclick="takeCommId('+ comment.id+')">Edit Comment</a></li>'+
			                '</ul>'
					);
				}
				
			}
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function loadTags(postId){
	var url = "http://localhost:8080/osa/posts/tag/"+postId;
	var tagsString = "Tags: ";
	$.ajax({
        url: url,
        dataType: 'json',
		cache: false,
        success: function (response) {
			for(var i=0; i<response.length; i++) {
				tag = response[i];
				if(i==0){
					tagsString += "#"+tag.name;
				}else{
					tagsString += ", #"+tag.name
				}
			}
			$('#tags').text(tagsString);
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function deletePost(){
	$.ajax({
		type: 'DELETE',
        url: 'http://localhost:8080/osa/posts/delete/'+id,
		success: function (response) {
        	window.location.href = "postsPage.html";
           
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function editPostE(){
	$('#pictureEP').hide();
	$('#pictureUploadCheckerAddPost').prop('checked', false);
	$('#editTitle').val("");
	$('#editDescription').val("");
	$('#editTagsField').val("");
}
function editPost(){
	var title = $('#editTitle').val().trim();
	var desc = $('#editDescription').val().trim();
	var photo = $('#pictureEP')[0].files[0];
	var tagsField = $('#editTagsField').val().trim();
	var tags = tagsField.split("#");
	console.log('photo: '+photo);
	console.log('tags duzina'+tags.length)
	if( desc == "" || title==""  || tags.length==0 || tags.length==1){
		alert("All fields must be filled.");
		return;
	}
	var checked = false;
	if($('#pictureUploadCheckerAddPost').is(":checked")){
		checked=true;
	}
	if(typeof photo == 'undefined' && checked==true){
		alert("Picture must be uploaded, or uncheck checkbox. :D");
		return;
	}
	if(checked==true){
		uploadImgPost(photo);
	}
	console.log("title: "+title+" description: "+desc);
	var data = {
			'title':title,
			'description':desc,
			'likes':post.likes,
			'likes':post.likes,
			'dislikes':post.dislikes,
			'longitude':post.longitude,
			'latitude':post.latitude,
			'date':post.date,
			'user':post.user,
	}
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'http://localhost:8080/osa/posts/update/'+id,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	$('#editPostModal').modal('toggle');
        	removeTags(response.id);
        	if(tags!=null && tags.length!=0  && tags.length!=1 ){
	            for (i=1; i<tags.length; i++) {
	            	var data = new FormData();
	            	data.append('name', tags[i].toUpperCase().trim());
	            	addTag(data,response.id);
	            }
            }
        	loadPage(response.id);
        	loadTags(response.id);
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			$('#editPostModal').modal('toggle');
			alert(textStatus);
		}
    });
}
function uploadImgPost(photo){
	console.log(id+" "+photo)
	var data=new FormData();
	data.append('id',id);
	data.append('photo',photo);
	
	$.ajax({
		type: 'POST',
        contentType: false,
        url: 'http://localhost:8080/osa/posts/upload_photo',
        data: data,
        dataType: false,
		cache: false,
		processData: false,
        success: function (response) {
        	console.log("proslo dodavanje slike");
           
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function likePost(){
	if(userId=="null"){
		$('#loginModal').modal("toggle");
		return;
	}
	var like = parseInt($('#like').text());
	var dislike = parseInt($('#dislike').text());
	if($('#dislikeBtn').prop('disabled')){
		var data = {
				'title':post.title,
				'description':post.description,
				'likes':like+1,
				'dislikes':dislike-1,
				'longitude':post.longitude,
				'latitude':post.latitude,
				'date':post.date,
				'user':post.user,
		}
	}else{
		var data = {
				'title':post.title,
				'description':post.description,
				'likes':like+1,
				'dislikes':dislike,
				'longitude':post.longitude,
				'latitude':post.latitude,
				'date':post.date,
				'user':post.user,
		}
	}
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'http://localhost:8080/osa/posts/update/'+id,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	if($('#dislikeBtn').prop('disabled')){
        		$("#dislikeBtn").prop("disabled",false);
        	}
        	$("#likeBtn").prop("disabled",true);
        	$('#like').text(response.likes);
        	$('#dislike').text(response.dislikes);
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function dislikePost(){
	if(userId=="null"){
		$('#loginModal').modal("toggle");
		return;
	}
	var like = parseInt($('#like').text());
	var dislike = parseInt($('#dislike').text());
	if($('#likeBtn').prop('disabled')){
		var data = {
				'title':post.title,
				'description':post.description,
				'likes':like-1,
				'dislikes':dislike+1,
				'longitude':post.longitude,
				'latitude':post.latitude,
				'date':post.date,
				'user':post.user,
		}
	}else{
		var data = {
				'title':post.title,
				'description':post.description,
				'likes':like,
				'dislikes':dislike+1,
				'longitude':post.longitude,
				'latitude':post.latitude,
				'date':post.date,
				'user':post.user,
		}
	}
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'http://localhost:8080/osa/posts/update/'+id,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	if($('#likeBtn').prop('disabled')){
        		$("#likeBtn").prop("disabled",false);
        	}
        	$("#dislikeBtn").prop("disabled",true);
        	$('#like').text(response.likes);
        	$('#dislike').text(response.dislikes);
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function addComment(){
	var title = $('#myCommentTitle').val().trim();
	var desc = $('#myCommentText').val().trim();
	if(title=="" || desc == ""){
		alert("All fields must be filled");
		return;
	}
	var data = new FormData();
	data.append('title',title);
	data.append('description',desc);
	data.append('post_id',id);
	data.append('user_id',userId);
		
	
	
	console.log(data)
	$.ajax({
		type: 'POST',
        contentType: false,
        url: 'http://localhost:8080/osa/comments/add',
        data: data,
        dataType: false,
		cache: false,
		processData: false,
        success: function (response) {
        	var commDiv = $('#commentsRow');
        	comment = response;
			var date = format(comment.date);
			var commUserPhoto = 'http://www.personalbrandingblog.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640-300x300.png';
			if(comment.user.photo!=null){
				commUserPhoto = 'data:image/gif;base64,'+comment.user.photo;
			}
			commDiv.append(
						'<div class="comment" id="comm'+comment.id+'">'+
						'<img height="45" width="45" alt="commPic" id="commPic" src="'+commUserPhoto+'">'+
						'<label for="commPic" id="usernameLabel">'+comment.user.username+'</label>'+
						'<p id="commDate">'+'Date posted: '+date+'</p>'+
						'<h4 id="commTitle'+comment.id+'">'+comment.title+'</h4>'+
						'<p id="commDesc'+comment.id+'">'+comment.description+'</p>'+
						'<div id="options'+comment.id+'">'+
						'<button id="commlike'+comment.id+'" class="btn btn-primary" onclick="likeComment('+comment.id+')"><span class="glyphicon glyphicon-thumbs-up"></span></button>'+
						'<label for="commlike" id="likeComm'+comment.id+'">'+comment.likes+'</label>'+
						'<button id="commdislike'+comment.id+'" class="btn btn-primary"  onclick="dislikeComment('+comment.id+')"> <span class="glyphicon glyphicon-thumbs-down"></span></button>'+
						'<label for="commdislike" id="dislikeComm'+comment.id+'">'+comment.dislikes+'</label>'+
						'</div>'+
						'<hr id="shortline">'+
						'<br>'+
					'</div>');
			if(post.user.userType == 'ADMIN' || post.user.id == id){
				$('#options'+comment.id).append(
						'<button type="button" class="dropdown-toggle btn btn-default" data-toggle="dropdown" id="optionsForAdminOrOwners"><span class="glyphicon glyphicon-menu-hamburger"></span></button>'+
						'<ul class="dropdown-menu" id="optionsForOwnerAndAdmin">'+
		                '<li id="deleteComm"><a href="#deleteModal" data-toggle="modal" onclick="takeCommId('+ comment.id+')">Delete Comment</a></li>'+
		                '<li id="editComm"><a href="#editComment" data-toggle="modal" onclick="takeCommId('+ comment.id+')">Edit Comment</a></li>'+
		                '</ul>'
				);
			}
        	
        	
        	
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus,errorThrown);
			
		}
    });
}
var commId = 0;
var comm= null;
function takeCommId(cid){
	
	$('#editNewComTitle').val("");
	$('#editNewComDescription').val("");
	commId=cid;
	$.ajax({
		type: 'GET',
        url: 'http://localhost:8080/osa/comments/'+cid,
		cache: false,
        success: function (response) {
        	comm=response;
        	
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
			
		}
    });
	
}
function editComment(){
	
	
	var title =  $('#editNewComTitle').val().trim();
	var desc = $('#editNewComDescription').val().trim();
	
	if(title == "" || desc ==  ""){
		alert("All fields must be filled")
		return;
	}
	var data = {
			'title':title,
			'description':desc,
			'likes': comm.likes,
			'dislikes': comm.dislikes
	}
	$.ajax({
		type: 'PUT',
		contentType: 'application/json',
        url: 'http://localhost:8080/osa/comments/update/'+commId,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	$('#editComment' ).modal('toggle');
        	$('#commTitle'+commId).text(response.title);
        	$('#commDesc'+commId).text(response.description);
        	
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
			$('#editComment').modal('toggle');
		}
    });
	
	
}
function deleteComment(){
	$.ajax({
        url: 'http://localhost:8080/osa/comments/delete/'+commId,
		type: 'DELETE',
        success: function (response) {
        	$('#comm'+commId).remove();
        	$('#deleteModal').modal('toggle');
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
function likeComment(cid){
	if(userId=="null"){
		$('#loginModal').modal("toggle");
		return;
	}
	var like = parseInt($('#likeComm'+cid).text());
	var dislike = parseInt($('#dislikeComm'+cid).text());
	var title = $('#commTitle'+cid).text();
	var desc = $('#commDesc'+cid).text();
	if($('#commdislike'+cid).prop('disabled')){
		var data = {
				'title':title,
				'description':desc,
				'likes':like+1,
				'dislikes':dislike-1
		}
	}else{
		var data = {
				'title':title,
				'description':desc,
				'likes':like+1,
				'dislikes':dislike
		}
	}
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'http://localhost:8080/osa/comments/update/'+cid,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	post = response;
        	$("#commlike"+cid).prop("disabled",true);
        	$('#likeComm'+cid).text(post.likes);
        	$('#dislikeComm'+cid).text(post.dislikes);
        	if($('#commdislike'+cid).prop('disabled')){
        		$("#commdislike"+cid).prop("disabled",false);
        	}
        },
		error: function (jqXHR, textStatus, errorThrown) { 
			alert(textStatus);
		}
    });
}
function dislikeComment(cid){
	if(userId=="null"){
		$('#loginModal').modal("toggle");
		return;
	}
	var like = parseInt($('#likeComm'+cid).text());
	var dislike = parseInt($('#dislikeComm'+cid).text());
	var title = $('#commTitle'+cid).text();
	var desc = $('#commDesc'+cid).text();
	if($('#commlike'+cid).prop('disabled')){
		var data = {
				'title':title,
				'description':desc,
				'likes':like-1,
				'dislikes':dislike+1
		}
	}else{
		var data = {
				'title':title,
				'description':desc,
				'likes':like,
				'dislikes':dislike+1
		}
	}
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'http://localhost:8080/osa/comments/update/'+cid,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	post = response;
        	$("#commdislike"+cid).prop("disabled",true);
        	$('#likeComm'+cid).text(post.likes);
        	$('#dislikeComm'+cid).text(post.dislikes);
        	if($('#commlike'+cid).prop('disabled')){
        		$("#commlike"+cid).prop("disabled",false);
        	}
        },
		error: function (jqXHR, textStatus, errorThrown) { 
			alert(textStatus);
		}
    });
}
function uploadCheckerEditPost(){
	$('#pictureEP').toggle();
}

function sortComments(){
	var sortBy = $('#orderComment').val();
	console.log(sortBy);
	var orderBy = "";
	if(sortBy == 1){
		orderBy ="orderByDate";
	}else if(sortBy == 2){
		orderBy ="orderByPopularity";
	}
	var url = "http://localhost:8080/osa/comments/"+ orderBy + "/" + id ;
	console.log(url)
	
	$.ajax({
        url: url,
        dataType: 'json',
		cache: false,
        success: function (response) {
        	var commDiv = $('#commentsRow');
        	commDiv.empty();
			for(var i=0; i<response.length; i++) {
				comment = response[i];
				console.log(comment)
				var date = format(comment.date);
				var commUserPhoto = 'http://www.personalbrandingblog.com/wp-content/uploads/2017/08/blank-profile-picture-973460_640-300x300.png';
				if(comment.user.photo!=null){
					commUserPhoto = 'data:image/gif;base64,'+comment.user.photo;
				}
				commDiv.append(
							'<div class="comment" id="comm'+comment.id+'">'+
							'<img height="45" width="45" alt="commPic" id="commPic" src="'+commUserPhoto+'">'+
							'<label for="commPic" id="usernameLabel">'+comment.user.username+'</label>'+
							'<p id="commDate">'+'Date posted: '+date+'</p>'+
							'<h4 id="commTitle'+comment.id+'">'+comment.title+'</h4>'+
							'<p id="commDesc'+comment.id+'">'+comment.description+'</p>'+
							'<div id="options'+comment.id+'">'+
							'<button id="commlike'+comment.id+'" class="btn btn-primary" onclick="likeComment('+comment.id+')"><span class="glyphicon glyphicon-thumbs-up"></span></button>'+
							'<label for="commlike" id="likeComm'+comment.id+'">'+comment.likes+'</label>'+
							'<button id="commdislike'+comment.id+'" class="btn btn-primary"  onclick="dislikeComment('+comment.id+')"> <span class="glyphicon glyphicon-thumbs-down"></span></button>'+
							'<label for="commdislike" id="dislikeComm'+comment.id+'">'+comment.dislikes+'</label>'+
							'</div>'+
							'<hr id="shortline">'+
							'<br>'+
						'</div>');
				if(post.user.userType == 'ADMIN' || post.user.id == id){
					$('#options'+comment.id).append(
							'<button type="button" class="dropdown-toggle btn btn-default" data-toggle="dropdown" id="optionsForAdminOrOwners"><span class="glyphicon glyphicon-menu-hamburger"></span></button>'+
							'<ul class="dropdown-menu" id="optionsForOwnerAndAdmin">'+
			                '<li id="deleteComm"><a href="#deleteModal" data-toggle="modal" onclick="takeCommId('+ comment.id+')">Delete Comment</a></li>'+
			                '<li id="editComm"><a href="#editComment" data-toggle="modal" onclick="takeCommId('+ comment.id+')">Edit Comment</a></li>'+
			                '</ul>'
					);
				}
				
			}
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
	
}
function editProfileE(){
	$('#passwordEditUser').val("");
	$('#nameEditUser').val("");
	$('#picture').hide();
	$('#pictureUploadCheckerEditUser').prop('checked', false);
}
function uploadCheckerEditUser(){
	$('#picture').toggle();
}
function editProfile(){
	var password =  $('#passwordEditUser').val().trim();
	var name = $('#nameEditUser').val().trim();
	var photo =  $('#picture')[0].files[0];
	if( name=="" || password==""){
		alert("All fields must be filled");
		return;
	}
	var checked = false;
	if($('#pictureUploadCheckerEditUser').prop('checked')){
		checked=true;
	}
	if(checked == true && typeof photo == 'undefined'){
		alert("You must select a photo.");
		return;
	}
	var data={
			'name':name,
			'password':password,
			'userType':userRole
	}
	$.ajax({
		type: 'PUT',
        contentType: 'application/json',
        url: 'http://localhost:8080/osa/users/update/'+userId,
        data: JSON.stringify(data),
        dataType: 'json',
		cache: false,
		processData: false,
        success: function (response) {
        	if(checked==true){
        		console.log(response.id)
        		console.log(photo)
        		uploadImg(response.id,photo);
        	}
        	$('#postAuthor').text("Author: "+response.name)
        	$('#editUser').modal('toggle');
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(jqXHR.status);
		}
    });
}

function addTag(data,postId){
	$.ajax({
		type: 'POST',
        url: 'http://localhost:8080/osa/tags/add',
        contentType: false,
        data: data,
		cache: false,
		processData: false,
        success: function (response) {
        	console.log("tag success: "+ response.name+"id: "+response.id);
        	joingTagAndPost(response.id,postId);
           
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}

function removeTags(id){
	$.ajax({
        url: 'http://localhost:8080/osa/posts/removetags/' + id,
		type: 'DELETE',
        success: function (response) {
        	console.log("proslo brisanje tagova")
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}

function joingTagAndPost(tagId,postId){
	console.log("tagId: "+tagId + " postId: "+postId);
	var myUrl = 'http://localhost:8080/osa/posts/joing_tag_and_post/'+postId+'/'+tagId
	console.log(myUrl)
	$.ajax({
		type: 'POST',
        url: myUrl,
		cache: false,
        success: function (response) {
        	console.log("link success");
        },
		error: function (jqXHR, textStatus, errorThrown) {  
			alert(textStatus);
		}
    });
}
